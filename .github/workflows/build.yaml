name: Build and publish image

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      SECRET_DEFAULT_PW: ${{ secrets.SECRET_DEFAULT_PW }}
    steps:
      - uses: actions/checkout@v3
        name: checkout

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

      - uses: nelonoel/branch-name@v1.0.1

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start app in background
        run: |
          npm start &> /dev/null &

      - name: Wait for 4 seconds
        run: sleep 4

      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: mr-smithers-excellent/docker-build-push@v6.4
        name: push-container-image
        with:
          image: gepardec-gamertrack-frontend
          registry: ghcr.io
          multiPlatform: true
          platform: linux/amd64,linux/arm64
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
          labels: 1.0
          # if the branch is main, add the latest tag
          addLatest: ${{ github.ref == 'refs/heads/main' }}
